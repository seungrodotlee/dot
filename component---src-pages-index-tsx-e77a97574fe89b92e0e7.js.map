{"version":3,"file":"component---src-pages-index-tsx-e77a97574fe89b92e0e7.js","mappings":"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","sources":["webpack://docs/./src/domains/@ui/layout/layout.component.tsx","webpack://docs/./src/styles/pages.styles.ts","webpack://docs/./src/pages/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\n\nimport { GlobalStyles } from \"twin.macro\";\nimport \"@docsearch/css/dist/style.css\";\nimport \"../../../styles/docsearch.css\";\n\nimport { refineProps } from \"../../../utils\";\nimport OverlayProvider from \"../overlay/overlay.provider\";\n\nimport Sidebar from \"./sidebar/sidebar.component\";\nimport Header from \"./header/header.component\";\nimport StyledLayout from \"./layout.styles\";\nimport { LayoutProvider } from \"./layout.context\";\nimport { LayoutProps } from \"./layout.types\";\n\nconst Layout = ({ children, withoutSidebar, ...props }: LayoutProps) => {\n  const [sidebarVisible, setSidebarVisible] = useState<boolean>(false);\n\n  const toggleSidebar = useCallback(\n    (value: boolean) => () => {\n      setSidebarVisible(value);\n    },\n    [],\n  );\n\n  return (\n    <StyledLayout.Root sidebarVisible={sidebarVisible} {...refineProps(props)}>\n      <GlobalStyles />\n      <OverlayProvider>\n        <LayoutProvider\n          value={{\n            withoutSidebar,\n          }}\n        >\n          {!withoutSidebar && <Sidebar onClose={toggleSidebar(false)} />}\n          <StyledLayout.Main withoutSidebar={withoutSidebar}>\n            <Header onMenuClick={toggleSidebar(true)} />\n            <StyledLayout.Content>{children}</StyledLayout.Content>\n          </StyledLayout.Main>\n        </LayoutProvider>\n      </OverlayProvider>\n    </StyledLayout.Root>\n  );\n};\n\nexport default Layout;\n","import tw, { styled } from \"twin.macro\";\n\nexport const StyledIndex = {\n  Root: styled.div`\n    ${[tw`h-full flex flex-col justify-center items-center font-bold lg:text-3xl`]}\n    & > div {\n      ${tw`w-full`}\n    }\n  `,\n  Title: styled.div<{ transformed: boolean }>`\n    ${[tw`flex flex-col lg:flex-row justify-center items-center p-4 font-black border-b border-white text-lg md:text-5xl xl:text-[4rem]`]}\n    \n    &:hover {\n      ${tw`bg-white text-[#0f1020]`}\n    }\n\n    & > div {\n    ${tw`flex justify-center items-center lg:leading-[1.2]`}\n    }\n\n    & * {\n      pointer-events: none;\n      white-space: pre;\n    }\n\n    & .trans-shrink {\n      transition: font-size 0.4s cubic-bezier(0, 0.2, 1, 0.2);\n      font-size: ${({ transformed }) => transformed ? \"1em\" : 0};\n    }\n\n    & .trans-hidden {\n      ${({ transformed }) => transformed ? \"\" : \"display: none;\"}\n    }\n\n    & .trans-show {\n      ${({ transformed }) => transformed ? \"display: none;\" : \"\"}\n    }\n  `,\n  ContentWrap: styled.div`\n    ${[tw`grow flex justify-between flex-col lg:flex-row`]}\n  `,\n  Content: styled.p`\n    ${tw`lg:grow w-full p-4`}\n  `,\n  Links: styled.div`\n    ${tw`flex flex-col items-end lg:min-w-[320px] grow lg:grow-0 border-t lg:border-t-0 lg:border-l border-white`}\n    & > a {\n      ${tw`w-full px-4 py-2 border-b border-white`}\n\n      &:hover {\n        ${tw`bg-white text-[#0f1020]`}\n      }\n    }\n  `\n}","import {\n  MouseEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport \"twin.macro\";\n\nimport { Link, type HeadFC, useStaticQuery, graphql } from \"gatsby\";\nimport { useDynamicGeul } from \"@d0t/geul-react\";\nimport { delay } from \"@fxts/core\";\n\nimport Layout from \"../domains/@ui/layout/layout.component\";\nimport { StyledIndex } from \"../styles/pages.styles\";\nimport { ContentsIndexQuery } from \"../types/queries.types\";\n\nconst IndexPage = () => {\n  const data = useStaticQuery<ContentsIndexQuery>(graphql`\n    query {\n      allYaml {\n        edges {\n          node {\n            index {\n              title\n              prefix\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const {\n    geul: ing,\n    isRunning: isIngRunning,\n    run: runIng,\n  } = useDynamicGeul(\"\", {\n    speed: 50,\n    decomposeOnBackspace: true,\n  });\n\n  const {\n    geul: wha,\n    isRunning: isWhaRunning,\n    run: runWha,\n  } = useDynamicGeul(\"\", {\n    speed: 50,\n    decomposeOnBackspace: true,\n  });\n\n  const {\n    geul: asy,\n    isRunning: isAsyRunning,\n    run: runAsy,\n  } = useDynamicGeul(\"\", {\n    speed: 50,\n    decomposeOnBackspace: true,\n  });\n\n  const {\n    geul: eed,\n    isRunning: isEedRunning,\n    run: runEed,\n  } = useDynamicGeul(\"\", {\n    speed: 50,\n    decomposeOnBackspace: true,\n  });\n\n  const hovered = useRef<boolean>(false);\n  const [transformed, setTransformed] = useState<boolean>(false);\n\n  const isRunning = useMemo(\n    () => isIngRunning || isWhaRunning || isAsyRunning || isEedRunning,\n    [isIngRunning, isWhaRunning, isAsyRunning, isEedRunning],\n  );\n\n  const mouseEnterHandler: MouseEventHandler<HTMLDivElement> =\n    useCallback(async () => {\n      hovered.current = true;\n      setTransformed(true);\n\n      await delay(2000);\n      if (!hovered.current) {\n        setTransformed(false);\n      }\n    }, [isRunning]);\n\n  const mouseLeaveHandler: MouseEventHandler<HTMLDivElement> =\n    useCallback(() => {\n      hovered.current = false;\n\n      if (!isRunning) {\n        setTransformed(false);\n      }\n    }, [isRunning]);\n\n  useEffect(() => {\n    if (hovered.current) {\n      runIng(\"ING\");\n      runWha(\" WHA\");\n      runAsy(\"ASY\");\n      runEed(\"EED \");\n    } else {\n      runIng(\"\");\n      runWha(\"\");\n      runAsy(\"\");\n      runEed(\"\");\n    }\n  }, [transformed]);\n\n  return (\n    <Layout withoutSidebar>\n      <StyledIndex.Root>\n        <StyledIndex.Title\n          transformed={transformed}\n          onMouseEnter={mouseEnterHandler}\n          onMouseLeave={mouseLeaveHandler}\n        >\n          <div>\n            <span>DO</span>\n            <span>{ing}</span>\n            <span>{wha}</span>\n            <span>T </span>\n          </div>\n          <div>\n            <span>U</span>\n            <span className=\"trans-shrink\">&nbsp;</span>\n            <span>N</span>\n            <span>{eed}</span>\n            <span>I</span>\n            <span className=\"trans-hidden\">S&nbsp;</span>\n            <span>VER</span>\n            <span className=\"trans-show\">S</span>\n            <span className=\"trans-hidden\">Y</span>\n            <span className=\"trans-hidden\">&nbsp;</span>\n            <span>E</span>\n            <span>{asy}</span>\n          </div>\n        </StyledIndex.Title>\n        <StyledIndex.ContentWrap>\n          <StyledIndex.Content>\n            DOT은 JS/TS에서 풀스택에 걸쳐 사용할 수 있는\n            <br />\n            다양한 라이브러리를 제공하는 모노레포에요.\n            <br />\n            우측에서 알아보고자 하는 기술스택을 선택해 탐색해보세요!\n          </StyledIndex.Content>\n          <StyledIndex.Links>\n            {data.allYaml.edges[0].node.index.map(({ title, prefix }) => (\n              <Link to={`/${prefix}`}>{title}</Link>\n            ))}\n          </StyledIndex.Links>\n        </StyledIndex.ContentWrap>\n      </StyledIndex.Root>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n"],"names":["_ref2","children","withoutSidebar","props","sidebarVisible","setSidebarVisible","useState","toggleSidebar","useCallback","value","___EmotionJSX","StyledLayout","Root","refineProps","OverlayProvider","LayoutProvider","Sidebar","onClose","Main","Header","onMenuClick","Content","StyledIndex","Title","_ref","transformed","_ref3","ContentWrap","Links","data","useStaticQuery","geul","ing","isRunning","isIngRunning","run","runIng","useDynamicGeul","speed","decomposeOnBackspace","wha","isWhaRunning","runWha","asy","isAsyRunning","runAsy","eed","isEedRunning","runEed","hovered","useRef","setTransformed","useMemo","mouseEnterHandler","async","current","delay","mouseLeaveHandler","useEffect","Layout","onMouseEnter","onMouseLeave","className","allYaml","edges","node","index","map","title","prefix","Link","to","Head"],"sourceRoot":""}